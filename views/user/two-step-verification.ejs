<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('partials/head2'); %>
  <style>
    .otp-input {
      width: 42px;
      height: 40px;
      text-align: center;
      margin-right: 10px;
      font-size: 17px;
    }
    .otp-input:focus {
      outline: none;
      border: 2px solid #7FAD39;
    }
    .card {
      border-radius: 8px;
      padding: 20px;
    }
    .app-brand {
      margin-bottom: 20px;
    }
    .text-left {
      text-align: left;
    }
    .error {
      color: red;
      margin-top: 10px;
    }
  </style>
  <!-- Include SweetAlert CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
<body>
  <div class="container-xxl">
    <div class="authentication-wrapper authentication-basic container-p-y">
      <div class="authentication-inner py-4">
        <div class="card">
          <div class="card-body">
            <!-- Logo -->
            <div class="app-brand justify-content-center">
              <!-- Include your logo here -->
              <img src="user/img/Avocado logo.png" alt="logo" width="40">
            </div>
            <!-- /Logo -->
            <h4 class="mb-2 text-left">Two Step Verification</h4>
            <p class="mb-4 text-left">We sent a verification code to your mobile. Enter the code from the mobile in the field below.</p>
            <p class="mb-4 text-left"><%= email %></p>
            
            <% if (messages.error && messages.error.length > 0) { %>
              <div class="error" role="alert"><%= messages.error[0] %></div>
            <% } %>
            <% if (messages.info && messages.info.length > 0) { %>
              <div class="success" role="alert"><%= messages.info[0] %></div>
            <% } %>
            <% if (messages.success && messages.success.length > 0) { %>
              <div class="success" role="alert"><%= messages.success[0] %></div>
            <% } %>

            <form id="formOtpVerification" class="mb-3" action="/verify-otp" method="POST">
              <div class="d-flex justify-content-center mb-3">
                <input type="text" class="otp-input form-control" maxlength="1" autofocus />
                <input type="text" class="otp-input form-control" maxlength="1" />
                <input type="text" class="otp-input form-control" maxlength="1" />
                <input type="text" class="otp-input form-control" maxlength="1" />
                <input type="text" class="otp-input form-control" maxlength="1" />
                <input type="text" class="otp-input form-control" maxlength="1" />
              </div>
              <input type="hidden" name="otp" id="otp" value=""/>
              <div id="error-message" class="error"></div>
              <button class="btn btn-primary d-grid w-100" type="submit">Verify my account</button>
            </form>
            <div class="text-center">
              <p id="resend-timer">Didn't get the code? <span id="timer">60</span> seconds</p>
              <p id="resend-link" style="display: none;">Didn't get the code? <a href="" id="resend-button">Resend</a></p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Include SweetAlert JS -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
  const otpInputs = document.querySelectorAll('.otp-input');
  const otpHiddenInput = document.getElementById('otp');
  const form = document.getElementById('formOtpVerification');
  const errorMessageDiv = document.getElementById('error-message');

  otpInputs.forEach((input, index) => {
    input.addEventListener('input', () => {
      if (input.value.length === 1 && index < otpInputs.length - 1) {
        otpInputs[index + 1].focus();
      }
      updateOtpValue();
    });
    input.addEventListener('keydown', (event) => {
      if (event.key === 'Backspace' && index > 0 && input.value.length === 0) {
        otpInputs[index - 1].focus();
      }
      updateOtpValue();
    });
  });

  function updateOtpValue() {
    let otpValue = '';
    otpInputs.forEach(input => {
      otpValue += input.value;
    });
    otpHiddenInput.value = otpValue;
  }

  form.addEventListener('submit', async (event) => {
    event.preventDefault();
    if (otpHiddenInput.value.length < otpInputs.length) {
      errorMessageDiv.textContent = 'Please enter the complete OTP.';
      otpInputs.forEach(input => {
        if (!input.value) {
          input.style.border = '2px solid red';
        }
      });
    } else {
      const response = await fetch(form.action, {
        method: form.method,
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ otp: otpHiddenInput.value })
      });
      const data = await response.json();
      if (data.success) {
        Swal.fire({
          icon: 'success',
          title: 'OTP Verified',
          text: 'Your account has been verified.',
          timer: 2000,
          showConfirmButton: false
        }).then(() => {
          window.location.href = '/'; // Redirect to a secure page
        });
      } else {
        errorMessageDiv.textContent = data.message;
        otpInputs.forEach(input => {
          input.style.border = '2px solid red';
        });
      }
    }
  });

  otpInputs.forEach(input => {
    input.addEventListener('input', () => {
      input.style.border = '';
      errorMessageDiv.textContent = '';
    });
  });

  // Timer logic
  const timerElement = document.getElementById('timer');
  const resendTimer = document.getElementById('resend-timer');
  const resendLink = document.getElementById('resend-link');
  const resendButton = document.getElementById('resend-button');
  let timeLeft = 60;

  const countdown = setInterval(() => {
    if (timeLeft <= 0) {
      clearInterval(countdown);
      resendTimer.style.display = 'none';
      resendLink.style.display = 'block';
    } else {
      timeLeft--;
      timerElement.textContent = timeLeft;
    }
  }, 1000);

  resendButton.addEventListener('click', async (event) => {
    event.preventDefault();  // Prevent the default behavior
    const response = await fetch('/resend-otp', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    const data = await response.json();
    if (data.success) {
      Swal.fire({
        icon: 'success',
        title: 'OTP Resent',
        text: 'OTP has been resent to your email.',
        timer: 2000,
        showConfirmButton: false
      });
      timeLeft = 60;
      resendLink.style.display = 'none';
      resendTimer.style.display = 'block';
      const newCountdown = setInterval(() => {
        if (timeLeft <= 0) {
          clearInterval(newCountdown);
          resendTimer.style.display = 'none';
          resendLink.style.display = 'block';
        } else {
          timeLeft--;
          timerElement.textContent = timeLeft;
        }
      }, 1000);
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Resend Failed',
        text: 'Failed to resend OTP. Please try again.',
      });
    }
  });
});

  </script>
</body>
