<!DOCTYPE html>
<html lang="en">
  <%- include('partials/head.ejs') %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.css" />
  
  <body>
    <%- include('partials/side.ejs') %>
    <div class="screen-overlay"></div>
    <main class="main-wrap">
      <%- include('partials/heder.ejs') %>
      <section class="content-main">
        <div class="row">
          <div class="col-9">
            <div class="content-header">
              <h2 class="content-title">Add New Product</h2>
              <div>
                <button class="btn btn-light rounded font-sm mr-5 text-body hover-up">Save to draft</button>
                <button id="publishButton" class="btn btn-md rounded font-sm hover-up">Publish</button>
              </div>
            </div>
          </div>
          <div class="col-lg-6">
            <div class="card mb-4">
              <div class="card-header">
                <h4>Basic</h4>
              </div>
              <div class="card-body">
                <form id="productForm" action="/admin/addProducts" method="POST" enctype="multipart/form-data">
                  <div class="mb-4">
                    <label for="product_name" class="form-label">Product title</label>
                    <input type="text" name="productname" placeholder="Type here" class="form-control" id="product_name" required />
                  </div>
                  <div class="mb-4">
                    <label for="product_description" class="form-label">Full description</label>
                    <textarea placeholder="Type here" name="productdescription" class="form-control" rows="4" id="product_description" required></textarea>
                  </div>
                  <div class="row">
                    <div class="col-lg-4">
                      <div class="mb-4">
                        <label for="regular_price" class="form-label">Regular price</label>
                        <input placeholder="â‚¹" name="price" type="number" step="0.01" class="form-control" id="regular_price" required />
                      </div>
                    </div>
                    <div class="col-lg-4">
                      <label for="currency" class="form-label">Currency</label>
                      <select name="currency" class="form-select" id="currency" required>
                        <option value="INR">INR</option>
                      </select>
                    </div>
                  </div>
                  <div class="mb-4">
                    <label for="stock" class="form-label">Stock</label>
                    <input type="text" name="stock" class="form-control" id="stock" required />
                  </div>
                  <div class="input-upload">
                    <img src="/admin/imgs/theme/upload.svg" alt="" />
                    <input class="form-control" type="file" name="images" id="images" multiple required />
                  </div>
                  <div id="croppie-container" style="display: none;">
                    <div id="croppie"></div>
                    <div class="mt-3">
                      <button type="button" id="cropButton" class="btn btn-success">Crop</button>
                      <button type="button" id="rotateLeftButton" class="btn btn-secondary">Rotate Left</button>
                      <button type="button" id="rotateRightButton" class="btn btn-secondary">Rotate Right</button>
                    </div>
                  </div>
                  <div class="mb-4">
                    <label for="category" class="form-label">Category</label>
                    <select name="category" class="form-select" id="category" required>
                      <% categories.forEach(category => { %>
                      <option value="<%= category._id %>"><%= category.name %></option>
                      <% }) %>
                    </select>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </section>
      <%- include('partials/foot.ejs') %>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js"></script>
    <script>
      const allowedTypes = ["image/jpeg", "image/jpg", "image/png", "image/gif"];
      const imageInput = document.getElementById("images");
      const imagePreview = document.querySelector(".input-upload");
      const croppieContainer = document.getElementById("croppie-container");
      const cropButton = document.getElementById("cropButton");
      const rotateLeftButton = document.getElementById("rotateLeftButton");
      const rotateRightButton = document.getElementById("rotateRightButton");
      let croppieInstance;
      let selectedImageIndex = -1;

      imageInput.addEventListener("change", (event) => {
        const files = event.target.files;
        imagePreview.querySelectorAll(".preview-img").forEach((img) => img.remove());

        for (let i = 0; i < files.length; i++) {
          const file = files[i];
          if (allowedTypes.includes(file.type)) {
            const reader = new FileReader();
            reader.onload = (e) => {
              const imgElement = document.createElement("img");
              imgElement.src = e.target.result;
              imgElement.style.width = "100px";
              imgElement.style.margin = "5px";
              imgElement.style.border = "1px solid #ddd";
              imgElement.style.borderRadius = "5px";
              imgElement.classList.add("preview-img");
              imgElement.dataset.index = i;

              imgElement.addEventListener("click", (e) => {
                e.preventDefault();
                selectedImageIndex = i;
                initCroppie(e.target.src);
              });

              const previewContainer = document.createElement("div");
              previewContainer.style.position = "relative";
              previewContainer.style.display = "inline-block";
              previewContainer.style.marginRight = "10px";
              previewContainer.appendChild(imgElement);

              imagePreview.appendChild(previewContainer);
            };
            reader.readAsDataURL(file);
          } else {
            Swal.fire({
              icon: "error",
              title: "Invalid file type",
              text: "Only JPEG, JPG, PNG, and GIF files are allowed.",
            });
          }
        }
      });

      function initCroppie(imageUrl) {
        croppieContainer.style.display = "block";
        if (croppieInstance) {
          croppieInstance.destroy();
        }
        croppieInstance = new Croppie(document.getElementById("croppie"), {
          viewport: { width: 300, height: 300 },
          boundary: { width: 400, height: 400 },
          showZoomer: true,
          enableOrientation: true,
        });
        croppieInstance.bind({ url: imageUrl });
      }

      cropButton.addEventListener("click", (e) => {
        e.preventDefault();
        if (croppieInstance && selectedImageIndex !== -1) {
          croppieInstance.result({
            type: "base64",
            size: { width: 300, height: 300 },
            format: "jpeg",
          }).then((croppedImage) => {
            const hiddenInput = document.createElement("input");
            hiddenInput.type = "hidden";
            hiddenInput.name = `croppedImage${selectedImageIndex}`;
            hiddenInput.value = croppedImage;
            document.getElementById("productForm").appendChild(hiddenInput);

            const imgElement = imagePreview.querySelector(`[data-index="${selectedImageIndex}"]`);
            if (imgElement) {
              imgElement.src = croppedImage;
            }

            croppieContainer.style.display = "none";
          });
        }
      });

      rotateLeftButton.addEventListener("click", (e) => {
        e.preventDefault();
        if (croppieInstance) {
          croppieInstance.rotate(-90);
        }
      });

      rotateRightButton.addEventListener("click", (e) => {
        e.preventDefault();
        if (croppieInstance) {
          croppieInstance.rotate(90);
        }
      });

      document.getElementById("publishButton").addEventListener("click", (e) => {
        e.preventDefault();
        const form = document.getElementById("productForm");
        if (!form.checkValidity()) {
          form.reportValidity();
          return;
        }

        Swal.fire({
          title: "Are you sure?",
          text: "Do you want to publish this product?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, publish it!",
        }).then((result) => {
          if (result.isConfirmed) {
            form.submit();
          }
        });
      });
    </script>
  </body>
</html>
