<!DOCTYPE html>
<html lang="en">
  <%- include('partials/head.ejs') %>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
  <body>
    <%- include('partials/side.ejs') %>
    <div class="screen-overlay"></div>

    <main class="main-wrap">
      <%- include('partials/heder.ejs') %>
      <section class="content-main">
        <div class="content-header">
          <div>
            <h2 class="content-title card-title">Offers</h2>
            <p>Add, edit or delete an offer</p>
          </div>
          <div>
            <input
              type="text"
              placeholder="Search Offers"
              class="form-control bg-white"
            />
          </div>
        </div>
        <div class="card">
          <div class="card-body">
            <div class="row">
              <div class="col-md-3">
                <form
                  id="createOfferForm"
                  action="/admin/createOffer"
                  method="POST"
                >
                  <div class="mb-4">
                    <label for="offerName" class="form-label">Offer Name</label>
                    <input
                      type="text"
                      placeholder="Type here"
                      class="form-control"
                      name="offerName"
                      id="offerName"
                    />
                  </div>
                  <div class="mb-4">
                    <label for="discount" class="form-label">Discount (%)</label>
                    <input
                      type="number"
                      placeholder="Enter discount"
                      class="form-control"
                      name="discount"
                      id="discount"
                    />
                  </div>
                  <div class="mb-4">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input
                      type="date"
                      class="form-control"
                      name="startDate"
                      id="startDate"
                    />
                  </div>
                  <div class="mb-4">
                    <label for="endDate" class="form-label">End Date</label>
                    <input
                      type="date"
                      class="form-control"
                      name="endDate"
                      id="endDate"
                    />
                  </div>
                  <div class="mb-4">
                    <label for="offerType" class="form-label">Offer Type</label>
                    <select
                      class="form-select"
                      name="offerType"
                      id="offerType"
                    >
                      <option value="category">Category</option>
                      <option value="product">Product</option>
                      
                    </select>
                  </div>
                  <div class="mb-4" id="categorySelection" style="display: none;">
                    <label for="categoryId" class="form-label">Select Category</label>
                    <select
                      class="form-select"
                      name="categoryId"
                      id="categoryId"
                      multiple
                    >
                    <% categories.forEach(category => { %>
                      <option value="<%= category._id %>"><%= category.name %></option>
                    <% }); %>
                    </select>
                  </div>
                  <div class="mb-4" id="productSelection" style="display: none;">
                    <label for="productId" class="form-label">Select Product</label>
                    <select
                      class="form-select"
                      name="productId"
                      id="productId"
                      multiple
                    >
                      <% products.forEach(product => { %>
                        <option value="<%= product._id %>"><%= product.name %> - $<%= product.price %></option>
                      <% }); %>
                    </select>
                  </div>
                  <div class="d-grid">
                    <button class="btn btn-primary" type="submit">
                      Create offer
                    </button>
                  </div>
                </form>
              </div>

              <div class="col-md-9">
                <div class="table-responsive">
                  <table class="table table-hover">
                    <thead>
                      <tr>
                        <th>Offer Name</th>
                        <th>Discount</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Type</th>
                        <th class="text-end">Action</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% offers.forEach(offer => { %>
                      <tr>
                        <td><%= offer.offerName %></td>
                        <td><%= offer.discount %>%</td>
                        <td><%= offer.startDate.toLocaleDateString() %></td>
                        <td><%= offer.endDate.toLocaleDateString() %></td>
                        <td><%= offer.offerType %></td>
                        <td class="text-end">
                          <a 
                            href="javascript:void(0);"
                            class="btn btn-sm font-sm rounded btn-brand"
                            onclick="editOffer('<%= offer._id %>')"
                          >Edit</a>
                          
                          <a 
                            href="javascript:void(0);"
                            class="btn btn-sm font-sm btn-light rounded"
                            onclick="deleteOffer('<%= offer._id %>')"
                          >Delete</a>
                        </td>
                      </tr>
                      <% }) %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      
    </main>
    <%- include('partials/foot.ejs') %>
    <script>
      document.getElementById("offerType").addEventListener("change", function() {
        const categorySelection = document.getElementById("categorySelection");
        const productSelection = document.getElementById("productSelection");
        
        if (this.value === "category") {
          categorySelection.style.display = "block";
          productSelection.style.display = "none";
        } else if (this.value === "product") {
          categorySelection.style.display = "none";
          productSelection.style.display = "block";
        } else {
          categorySelection.style.display = "none";
          productSelection.style.display = "none";
        }
      });

      document.getElementById("createOfferForm").addEventListener("submit", function(event) {
  event.preventDefault();
  
  const formData = new FormData(this);
  const offerData = Object.fromEntries(formData.entries());

  // Basic form validation
  if (!offerData.offerName || !offerData.discount || !offerData.startDate || !offerData.endDate || !offerData.offerType) {
    Swal.fire('Error', 'Please fill in all required fields', 'error');
    return;
  }

  const url = this.action;
  const method = this.method;

  // Send data to server
  fetch(url, {
    method: method,
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(offerData),
  })
  .then(response => response.json())
  .then(data => {
    if (data.message === 'Offer created successfully' || data.message === 'Offer updated successfully') {
      Swal.fire('Success', data.message, 'success')
      .then(() => {
        location.reload();
      });
    } else {
      Swal.fire('Error', data.message || 'An error occurred', 'error');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    Swal.fire('Error', 'An error occurred while processing the offer', 'error');
  });
});

function editOffer(offerId) {
  // Fetch the offer details
  fetch(`/admin/offers/${offerId}`)
    .then(response => response.json())
    .then(offer => {
      // Populate the form with offer details
      document.getElementById('offerName').value = offer.offerName;
      document.getElementById('discount').value = offer.discount;
      document.getElementById('startDate').value = offer.startDate.split('T')[0];
      document.getElementById('endDate').value = offer.endDate.split('T')[0];
      document.getElementById('offerType').value = offer.offerType;

      // Show appropriate selection based on offer type
      const event = new Event('change');
      document.getElementById('offerType').dispatchEvent(event);

      // Select the appropriate categories or products
      if (offer.offerType === 'category') {
        $('#categoryId').val(offer.categoryId).trigger('change');
      } else if (offer.offerType === 'product') {
        $('#productId').val(offer.productId).trigger('change');
      }

      // Update form submission
      const form = document.getElementById('createOfferForm');
      form.action = `/admin/updateOffer/${offerId}`;
      form.method = 'POST';

      // Add a hidden input for the offer ID
      let hiddenInput = document.createElement('input');
      hiddenInput.type = 'hidden';
      hiddenInput.name = 'offerId';
      hiddenInput.value = offerId;
      form.appendChild(hiddenInput);

      // Update submit button text
      form.querySelector('button[type="submit"]').textContent = 'Update Offer';

      // Scroll to the form
      form.scrollIntoView({ behavior: 'smooth' });
    })
    .catch(error => {
      console.error('Error:', error);
      Swal.fire('Error', 'An error occurred while fetching offer details', 'error');
    });
}
function deleteOffer(offerId) {
  Swal.fire({
    title: "Are you sure?",
    text: "You won't be able to revert this!",
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#3085d6",
    cancelButtonColor: "#d33",
    confirmButtonText: "Yes, delete it!"
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/admin/offers/${offerId}`, {
        method: 'DELETE',
      })
      .then(response => response.json())
      .then(data => {
        if (data.message === 'Offer deleted successfully') {
          Swal.fire(
            "Deleted!",
            "Your offer has been deleted.",
            "success"
          ).then(() => {
            location.reload();
          });
        } else {
          Swal.fire('Error', data.message || 'An error occurred', 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error', 'An error occurred while deleting the offer', 'error');
      });
    }
  });
}

      $(document).ready(function() {
  $('#categoryId').select2({
    placeholder: "Select categories",
    allowClear: true
  });
  
  $('#productId').select2({
    placeholder: "Select products",
    allowClear: true
  });
});
    </script>
  </body>
</html>