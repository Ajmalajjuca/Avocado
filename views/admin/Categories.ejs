<!DOCTYPE html>
<html lang="en">
  <%- include('partials/head.ejs') %>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <body>
    <%- include('partials/side.ejs') %>
    <div class="screen-overlay"></div>

    <main class="main-wrap">
      <%- include('partials/heder.ejs') %>
      <section class="content-main">
        <div class="content-header">
          <div>
            <h2 class="content-title card-title">Categories</h2>
            <p>Add, edit or block a category</p>
          </div>
          <div>
            <input
              type="text"
              placeholder="Search Categories"
              class="form-control bg-white"
            />
          </div>
        </div>
        <div class="card">
          <div class="card-body">
            <div class="row">
              <div class="col-md-3">
                <form
                  id="createCategoryForm"
                  action="/admin/createCategory"
                  method="POST"
                >
                  <div class="mb-4">
                    <label for="categoryName" class="form-label">Name</label>
                    <input
                      type="text"
                      placeholder="Type here"
                      class="form-control"
                      name="CategoryName"
                      id="categoryName"
                    />
                  </div>
                  <div class="mb-4">
                    <label class="form-label">Description</label>
                    <textarea
                      placeholder="Type here"
                      class="form-control"
                      name="CategoryDescription"
                      id="CategoryDescription"
                    ></textarea>
                  </div>
                  <div class="d-grid">
                    <button class="btn btn-primary" type="submit">
                      Create category
                    </button>
                  </div>
                </form>
              </div>

              <div class="col-md-9">
                <div class="table-responsive">
                  <table class="table table-hover">
                    <thead>
                      <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th class="text-end">Action</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% category.forEach(cat => { %>
                      <tr>
                        <td width="40%">
                          <div class="info pl-3">
                            <h6 class="mb-0 title"><%= cat.name %></h6>
                          </div>
                        </td>
                        <td><%= cat.description %></td>
                        <td>
                          <span
                            class="badge rounded-pill <%= cat.status ? 'alert-success' : 'alert-danger' %>"
                          >
                            <%= cat.status ? 'Active' : 'Blocked' %>
                          </span>
                        </td>
                        <td class="text-end">
                          <a
                            href="#"
                            class="btn btn-sm btn-brand rounded font-sm mt-15"
                            onclick="editCategory('<%= cat._id %>')"
                            >Edit</a
                          >
                          <a
                            href="#"
                            class="btn btn-sm btn-brand rounded font-sm mt-15"
                            onclick="blockCategory('<%= cat._id %>')"
                          >
                            <%= cat.status ? 'Block' : 'Unblock' %>
                          </a>
                        </td>
                        <td class="text-end">
                          <!-- dropdown //end -->
                        </td>
                      </tr>
                      <% }) %>
                    </tbody>
                  </table>

                  <!-- Modal for editing category -->
                  <div
                    class="modal fade"
                    id="editCategoryModal"
                    tabindex="-1"
                    aria-labelledby="editCategoryModalLabel"
                    aria-hidden="true"
                  >
                    <div class="modal-dialog modal-lg">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title" id="editCategoryModalLabel">
                            Edit Category
                          </h5>
                          <button
                            type="button"
                            class="btn-close"
                            data-bs-dismiss="modal"
                            aria-label="Close"
                          ></button>
                        </div>
                        <div class="modal-body">
                          <!-- Form for editing category -->
                          <form id="editCategoryForm">
                            <input type="hidden" id="categoryId" />
                            <div class="mb-3">
                              <label for="editCategoryName" class="form-label"
                                >Category Name</label
                              >
                              <input
                                type="text"
                                class="form-control"
                                id="editCategoryName"
                                required
                              />
                            </div>
                            <div class="mb-3">
                              <label
                                for="editCategoryDescription"
                                class="form-label"
                                >Category Description</label
                              >
                              <textarea
                                class="form-control"
                                id="editCategoryDescription"
                                rows="3"
                              ></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">
                              Save Changes
                            </button>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      <footer class="main-footer font-xs">
        <div class="row pb-30 pt-15">
          <div class="col-sm-6">
            <script>
              document.write(new Date().getFullYear());
            </script>
            Â©, Evara - HTML Ecommerce Template.
          </div>
          <div class="col-sm-6">
            <div class="text-sm-end">All rights reserved</div>
          </div>
        </div>
      </footer>
    </main>
    <%- include('partials/foot.ejs') %>
    <script>
      
  document.getElementById("createCategoryForm").addEventListener("submit", function (event) {
    event.preventDefault();

    const categoryName = document.getElementById("categoryName").value.trim();
    const categoryDescription = document.getElementById("CategoryDescription").value.trim();

    // Validation
    if (categoryName === "") {
      Swal.fire("Error!", "Category name cannot be empty.", "error");
      return;
    }
    if (/\d/.test(categoryName)) {
      Swal.fire("Error!", "Category name cannot contain numbers.", "error");
      return;
    }

    // Check if the category name is unique
    fetch(`/admin/checkCategoryName/${categoryName}`)
      .then(response => response.json())
      .then(data => {
        if (data.exists) {
          Swal.fire("Error!", "Category name already exists.", "error");
        } else {
          // Confirm creation with SweetAlert
          Swal.fire({
            title: "Are you sure?",
            text: `Do you want to create the category "${categoryName}"?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, create it!",
            cancelButtonText: "No, cancel",
          }).then((result) => {
            if (result.isConfirmed) {

              fetch("/admin/createCategory", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  CategoryName: categoryName,
                  CategoryDescription: categoryDescription,
                }),
              })
                .then(response => response.json())
                .then(data => {
                  if (data.success) {
                    Swal.fire({
                      title: "Created!",
                      text: data.message,
                      icon: "success",
                      confirmButtonText: "Okay",
                    }).then(() => {
                      location.reload();
                    });
                  } else {
                    Swal.fire("Error!", data.message, "error");
                  }
                })
                .catch((error) => {
                  console.error("Error:", error);
                  Swal.fire("Error!", "There was a problem creating the category.", "error");
                });
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              Swal.fire("Cancelled", "Your category creation was cancelled.", "error");
            }
          });
        }
      })
      .catch(error => {
        console.error("Error:", error);
        Swal.fire("Error!", "There was a problem checking the category name.", "error");
      });
  });



      function editCategory(categoryId) {
        // Fetch category details by categoryId and populate the modal fields
        fetch(`/admin/getCategory/${categoryId}`)
          .then((response) => response.json())
          .then((data) => {
            document.getElementById("categoryId").value = data._id;
            document.getElementById("editCategoryName").value = data.name;
            document.getElementById("editCategoryDescription").value =
              data.description;

            // Show the edit modal
            var editCategoryModal = new bootstrap.Modal(
              document.getElementById("editCategoryModal")
            );
            editCategoryModal.show();
          })
          .catch((error) => console.error("Error:", error));
      }

      // Example function for submitting edited category form
      
  document.getElementById("editCategoryForm").addEventListener("submit", function (event) {
    event.preventDefault();

    const categoryId = document.getElementById("categoryId").value;
    const categoryName = document.getElementById("editCategoryName").value.trim();
    const categoryDescription = document.getElementById("editCategoryDescription").value.trim();

    // Validation
    if (categoryName === "") {
      Swal.fire("Error!", "Category name cannot be empty.", "error");
      return;
    }
    if (/\d/.test(categoryName)) {
      Swal.fire("Error!", "Category name cannot contain numbers.", "error");
      return;
    }

    // Check if the category name is unique
    fetch(`/admin/checkCategoryName/${categoryName}`)
    
      .then(response => response.json())
      
      
      .then(data => {
        if (data.exists && data.categoryId !== categoryId) {
          Swal.fire("Error!", "Category name already exists.", "error");
        } else {
          fetch(`/admin/updateCategory/${categoryId}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              name: categoryName,
              description: categoryDescription,
            }),
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire("Updated!", data.message, "success").then(() => {
                  location.reload();
                });
              } else {
                Swal.fire("Error!", data.message, "error");
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              Swal.fire("Error!", "There was a problem updating the category.", "error");
            });
        }
      })
      .catch(error => {
        console.error("Error:", error);
        Swal.fire("Error!", "There was a problem checking the category name.", "error");
      });
  });



      function editCategory(categoryId) {
        window.location.href = `/admin/category/${categoryId}/edit`;
      }

      function blockCategory(categoryId) {
        fetch(`/admin/category/${categoryId}/block`, { method: "PATCH" })
          .then((response) => {
            if (response.ok) {
              return response.json();
            } else {
              throw new Error("Failed to block category");
            }
          })
          .then((data) => {
            Swal.fire({
              title: "Success!",
              text: data.message,
              icon: "success",
              confirmButtonText: "Okay",
            }).then(() => {
              window.location.reload(); // Refresh the page after success
            });
          })
          .catch((error) => {
            console.error("Error:", error);
            Swal.fire({
              title: "Error!",
              text: "An error occurred while blocking the category",
              icon: "error",
              confirmButtonText: "Okay",
            });
          });
      }
    </script>
  </body>
</html>
